#!/usr/bin/perl

use strict;
use lib '../external_libs/';
use Statistics::Basic::Mean;
use Statistics::Basic::StdDev;
use lib '../';
use sunspot_and_faculae;
use sunspot;
use POSIX;
use Data::Dumper;
use Date::Calc qw( Days_in_Year Add_Delta_Days Delta_DHMS);
use List::Util qw(sum);
use Getopt::Std;


# thisis a template file which provides a spot centric has of
# sunspot data - presented in Greenwich format.
#
sub usage {
    print STDERR << "EOF";
This program compairs the sizes generated by Daniels code with those generated 
by richard stephensons code.

usage: $0 -f file

-f      : file containing daniels values

example: $0 -f ~/ihr/sunspots/perl/storm/semi_diam6.txt
EOF
    exit;
}

my %opts = ();
getopts("f:", \%opts) ;
if (!defined($opts{f})) { usage(); }


my $RichardSProgram = "/users/rhenwood/ihr/sunspots/perl/external_libs/a.out";

my $min = 0;
my $max = -1;
my $filename = $opts{f};
open (FH, $filename);
print "time | RS value | DB value | RS - DB\n";
while (defined (my $line = <FH>)) {
    #print "line = $line";
    if ($line =~ m/^\d/) {
        chomp($line);
        my @components = split(/[-:| T]/, $line);
        
        #print Dumper @components;
        my ($year, $month, $day) = @components[0 .. 2];
        my $hour = $components[3];
        my $minutes = $components[4];
        my $ut = $hour + $minutes/60;
        #    print "year $year , $month $day ut = $ut\n";
        #    exit 0;
        my $fileSunSD = $components[10];
        #print "sunsemidiameter = $fileSunSD";
        my $programCall = "$RichardSProgram $year $month $day $ut";
        my $progResult = `$programCall`;
        chomp ($progResult);
        my @progResults = split(/ +/, $progResult);
        #print Dumper @progResults;
        my $progSunSD = $progResults[14];
        print "$year-$month-$day $hour:$minutes, ";
        print "$progSunSD, $fileSunSD, ";
        print $progSunSD - $fileSunSD ;
        print "\n";
        my $diff = $progSunSD - $fileSunSD ;
        if ($diff < $min) {
            $min = $diff;
        }
        if ($diff > $max) {
            $max = $diff;
        }
    }
}

print "min = $min, max = $max\n";
