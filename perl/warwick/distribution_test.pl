#!/usr/bin/perl -w 

use lib '../external_libs/';
use Statistics::Basic::Mean;
use Statistics::Basic::Correlation;
use Statistics::Basic::StdDev;
use POSIX;
use List::Util qw(sum);
use Data::Dumper;

# generate random data of a gaussian distribution.
# and put is in an array
my @gaussianArray = ();
&getRands;
my @array = ();
my $numberOfPoints = scalar @gaussianArray;
print "number of poitns = $numberOfPoints\n";
my $binSize = 5;
my $bunchSize = 3; 
my $array_ref = \@gaussianArray;
my $mean = 0;
my $stddev = 0;
    
for (my $binSize = 10; $binSize > 1; $binSize--) {
my %bins = ();
# we have X_k, 
# now we can put the figures in bins,
# to get N_k
foreach my $X (sort numeric @gaussianArray) {
    my $binName = ($binSize/2)+$binSize * floor($X / $binSize);
    #print "binsize = $binSize binname = $binName x = $X\n";
    #push(@{$bins{($binSize/2)+$binSize * floor($X / $binSize)}},$X);
    push(@{$bins{$binName}}, $X);
}

#print Dumper %bins;
# so now N_k is just the total number of elements
# in each bin.
$mean = Statistics::Basic::Mean->new($array_ref)->query;
$stddev = Statistics::Basic::StdDev->new($array_ref)->query;
my $sigma = $stddev;
#print "mean = $mean, stdev = $stddev\n";
foreach my $binName (sort numeric keys %bins) {
    print "bin = $binName total = " . scalar @{$bins{$binName}};
    my $N_jm = scalar @{$bins{$binName}} / ($numberOfPoints );
    my $N_jmx = scalar @{$bins{$binName}} / ($numberOfPoints * $binSize);
    print " N_j_over_m = $N_jm N_j_over_m_deltax = $N_jmx ";
    my $binstddev = Statistics::Basic::StdDev->new(\@{$bins{$binName}})->query;
    print " binstdev = " . $binstddev;
#    print " including: " . (join ',', @{$bins{$binName}});

# now we can get the probablility distrobition.
#print " P = " . scalar @{$bins{$binName}} . " / " . $numberOfPoints . " = ";
    my $P_x = scalar @{$bins{$binName}} / $numberOfPoints;  
   print " P = $P_x ";

# and we can generate a Gaussian PDF from the numbers:
    #print "binName = $binName ";
    # this is the scaling factor, which i've taken as 1/sigma(sqrt(2pi)).
    my $A = 1 / ($stddev * ((2 * 3.14159)**0.5));
#    my $A = 1;
    my $P_g = $A * exp(-(($binName - $mean)**2/$stddev**2));
    print " P_g = $P_g";

# now calculate x^prime
    my $x_prime = ($P_x - $mean)/$stddev;
    my $p_x_prime = exp(-(($x_prime)**2));
    print " x_prime = $x_prime p_x_prime = $p_x_prime ";
    my $simple_x_prime = $binName / $stddev;
    my $simple_fx_prime = $stddev * $N_jmx;
    print " simple_xprime = $simple_x_prime simple_fx_prime = $simple_fx_prime ";
    print " stddev = $stddev";

    
    print "\n";
}
 print "\n\n";
 }

for (my $x = 0; $x <= 100; $x++) {
    $x = $x / $stddev;
    $x_prime = ($x - $mean)**2/(2 * $stddev**2);
    my $A = 1 / ($stddev * (sqrt(2 * 3.14159)));
    $f_prime = $A * exp(-1 * ($x_prime));
    print "x = $x_prime f_x = $f_prime";
    print "\n";
}
print "\n\n";
for (my $x = 0; $x <= 100; $x++) {
    $x_prime = ($x/ $stddev);
    $fx_prime = exp(-(($x_prime)**2));
    print "x_prime = $x_prime fx_prime = $fx_prime\n";
}
print "\n\n";
for (my $x = 0; $x <= 100; $x++) {
    $x_prime = (($x - $mean)/ (2 * $stddev)**2);
    $a = 1 / (sqrt(2 * 3.14159) * $stddev);
    $fx_prime = $a * exp(-(($x_prime)**2));
    print "x_prime = $x_prime fx_prime = $fx_prime\n";
}
    
print "mean $mean stdev $stddev\n";

sub numeric {
    $a <=> $b;
}

sub getRands {
    @gaussianArray = qw(67.333 29 58.667 69.333 60.667 56.333 77.333 15.667 37.333 65 35 32 46 60.667 73.667 21.333 40 47 69.667 48.333 17.667 54 49.667 54.667 27 45 33.333 40.667 51.667 63.667 50.667 59.667 31.667 55 25.333 88.333 67.667 46 63 46.333 70 30 32 81 31 56.333 40 63 21 84 29.667 54 30.667 67 58.333 23.333 35 74.333 49.333 43.333 86.667 14.667 46 60.667 27.333 39.333 89.333 41.333 67.667 18 20.667 40.667 52.667 57 58.333 72.333 21.667 47.667 78.667 58.667 22.667 52.667 45 62.333 31 58 26.333 86.667 42 27 20.333 40.333 36.333 48.667 28.333 39 81 54 33.667 71 48.333 56 63.667 35.667 67 59.667 75 56.667 46.667 83.333 32.667 40 83.333 48 31.333 47.667 36 49 65.333 69.333 23 57.667 49.333 75 43 52.667 64 31 72 70.333 36.333 26.667 47.333 12 20 26.667 65 50.333 54 59.333 63 40.667 56.333 84 43.333 56 49 62.333 39.333 83.333 74 42 36 40.667 43.667 35.667 41 75.333 44 81.333 41 25.667 31.667 47.333 42.333 55.667 59 13 47.333 36 61 53 43.333 50.667 46 45.667 60 54.667 54.667 46.333 29 92 70 59.667 59.333 64.667 58 39 82.667 27.333 54.333 41 80 23.333 25.667 55 63 72.333 64.333 19 63.667 65 62.667 33.667 80.333 53.667 47.667 16.667 42.667 30.333 55.667 88.667 60.667 37.667 35 43.333 60 58.333 36.333 48.667 57.667 49.333 60.333 32.667 53.667 47.333 18.667 35.333 35.667 51 60 61 51.667 17 42 73 62.333 71 59 49.333 65 80.333 36 52.333 11 34.333 27 24.333 36.333 57.333 42 80 34.667 36.333 29 64 39 40 82.333 29.667 46.333 47 45.667 17.333 59.333 39.667 43 32.333 41.667 39 43.333 43.333 67.667 57.333 50.667 51.333 23.333 44 75 62.667 61.333 35.667 48.333 77.667 56.667 67.667 38 36.333 28.667 35 69.667 51.667 41 72.333 52 53.333 39.667 22.333 52.667 22.667 37.333 53 37.333 36.667 35.333 35 32 61 28.667 46.667 35.667 29 66.333 45 54 48.333 58 59.667 52 37.667 50.667 48.667 52.333 10.667 37.333 61.667 71.333 44.333 32.667 60 43.667 60.667 65.667 81.667 65.667 52 64.333 21.333 55.333 11.667 28 22.333 34.333 60 55 51.333 57.667 59.333 41.333 54.667 52.667 32.333 56.333 57.667 27.333 28.333 80.333 64.333 45.667 54.667 48.667 48.667 29 36.667 37.667 53.333 24.667 15 36.667 20 56.667 79 49 40.333 68.667 43.667 64 83 56.667 64.667 38 66 37.333 64.333 54.667 40.667 42.333 28.333 42.333 79.333 59 47.333 40 71.333 67.667 46.667 49 45.333 67.333 65.667 57.667 37.667 75.667 61 65.333 60.333 63 46.667 49.667 37.667 40 28.333 62 62.333 70.667 24.333 80.667 37 63 51.667 59.667 45.667 55.667 49.667 44.333 50 52.667 35 73.333 52 23 37 24.667 48 44.667 23.333 22.667 70.333 88 67 21.667 68 37.667 74.667 48.667 36.333 36.333 68.333 81.667 36.333 57.667 48.667 57.667 48.333 30 52.667 43.667 53.333 56.333 31.333 45.667 79 59.333 62 30.333 61.667 45.667 53 59.667 76.667 56 36.333 36.667 32.333 63.333 34.667 54 19.667 14.333 62 32 47.667 56.667 26.667 35.667 46.667 39.333 60 31 73 48.667 38 53 57.667 67 84 33 86.667 72 56 39 59.333 57.667 41.667 6.3333 51 16.333 57.333 69 45.333 50.667 44.333 66 42.333 62 38.667 79.667 77 58.333 12.667 30.333 52 75.333 41.333 42 82 64 55.333 21.667 64.333 60 61.667 36.333 79 37.667 62 33 61.667 41.333 47.333 32.667 50 55.667 52.333 46.333 67 67.333 67.333 71 51.667 56 54.667 51.667 51.333 46.667 38.667 39 66 53.333 44.667 53.333 59.667 64.667 68 40.667 18.667 41.333 64.333 53 50.667 78.333 64.667 24.333 37.667 68 64 43.667 35.333 27 47.333 10.667 64.667 78 46.333 64.333 35 82.333 59 86.667 59.333 26.667 65.667 51 62 64 65.333 81 75.333 43 76.333 50.667 44 10.333 24.333 51 38.333 67.333 32.333 51.667 23 33.667 46.667 53.667 58 54.667 52.667 48 25.333 31.667 32 23.667 12.333 33 46 38.333 39.667 41.333 61.667 63 55 32.333 51.333 43 49.667 62.333 50.333 54 63.667 29 76 50 37.667 46.333 55.333 51.667 28.333 47.333 38.333 55 43 56.667 48.667 83.667 70.667 50.667 51.333 69.667 72.333 70.667 57 61.333 46.667 59 48 28 85.667 32.667 36 42.333 28.667 28 26.667 69.333 64 61.333 34.667 37.333 63.333 52.667 49.667 46.667 53.333 51.667 71.667 67 49.667 59.333 49.667 64.667 34.667 39 52.667 64 72 68 63.667 82 58.667 77.333 55 38.667 33.667 45.333 29.333 36 47.333 67 39 57 49 44 59.667 53 60.667 24.333 73 70.667 38 54.667 30.333 68.667 28.667 37 42 66.667 10.333 53.333 50.667 46.333 37 25.333 46.333 61 79 59 70 49.667 54 38.667 31 72.667 43 39 37 30.333 46 19.667 50.667 54 50.333 58.667 66 54.333 30.667 65.667 68.667 48.667 64.667 41.667 56.667 64 63.333 44 51 47 39 77.667 55.333 46.667 33 52.667 68 80.667 81.667 42 49 43 50 67.667 39.333 29 74.667 66 59 12 52.667 62.333 33.333 76.667 42.667 62 41.333 75.667 37 77.333 55 77.667 39.667 49 51.667 24.667 60.333 8.3333 53.667 66.667 55.333 69.667 45.667 44.333 64.333 40.333 38.667 19 66 31.667 65.333 52.667 58.333 51 36.333 46.667 37 38.333 55.667 61 33.667 58.333 48.333 15 57.333 46 42 89 47 33.333 56.333 45.333 52 25 53 52.333 40.333 32.667 31 46 41.667 56.667 38.333 61.667 52 46.333 66.333 56.667 26.333 40 29.667 44.333 22 64 63.333 68 24.333 70 49 58.667 31.667 32 57 32.333 34.333 53.667 46.333 53 68.667 57.667 49 51.667 48.333 75.333 45.667 34.333 58 78 26.333 54 76 24 21.667 40.667 26.667 49 22.667 44 54.333 53 66.667 26.667 68.667 50.333 39 71.667 49.667 47.333 58.667 61.667 43.667 58.333 37 75 33.333 50.333 44 28 42.333 38.333 41 41.667 21.333 62.667 76 68.333 50.333 47.667 33.667 24.667 41 85.333 27 52 69.667 47.667 34.333 61.667 44.667 31.333 45 57 65.667 69 58.333 70 58 63.333 57.333 30.333 58.333 48.667 61 29.667 55 67 43.333 71.667 43 27 66 62 43.333 41 83.333 65 70.333 56.333 44 65.667 75.333 61.667 45 30 61.667 64.667 67 79.667 78.333 48.667 47.667 77.333 62.333 48.667 57 44.667 29.667 59.667 9.6667 70.667 27.667 39.333 35 64.333 44 54 19 75 56 47.333 19.667 60.333 58.333 45.667 67.667);
}
1;
